requirement.txt files to be included
-------------------------------------
fastapi==0.79.0
evidently==0.1.53.dev0

Procfile Content
-------------------------------------------

web: uvicorn main:app --host=0.0.0.0 --port=${PORT}


Solution for Week 2
-----------------------------

regression_perfomance_dashboard.calculate(reference, current.loc['2011-02-07 00:00:00':'2011-02-14 23:00:00'], 
                                            column_mapping=column_mapping)

# regression_perfomance_dashboard.show()

regression_perfomance_dashboard.save("./static/regression_performance_after_week2.html")

target_drift_dashboard.calculate(reference, current.loc['2011-02-07 00:00:00':'2011-02-14 23:00:00'], 
                                   column_mapping=column_mapping)

# target_drift_dashboard.show()

target_drift_dashboard.save("./static/target_drift_after_week2.html")

Solution for week 3
----------------------------------------------

regression_perfomance_dashboard.calculate(reference, current.loc['2011-02-15 00:00:00':'2011-02-21 23:00:00'], 
                                            column_mapping=column_mapping)

# regression_perfomance_dashboard.show()

regression_perfomance_dashboard.save("./static/regression_performance_after_week3.html")

target_drift_dashboard.calculate(reference, current.loc['2011-02-15 00:00:00':'2011-02-21 23:00:00'], 
                                   column_mapping=column_mapping)

# target_drift_dashboard.show()

target_drift_dashboard.save("./static/target_drift_after_week3.html")

Data Drift week 2
--------------------------------------------------------------------
column_mapping = ColumnMapping()
column_mapping.numerical_features = numerical_features
data_drift_dashboard = Dashboard(tabs=[DataDriftTab()])
data_drift_dashboard.calculate(reference, current.loc['2011-02-07 00:00:00':'2011-02-14 23:00:00'],
                                   column_mapping=column_mapping)
data_drift_dashboard.save("./static/data_drift_dashboard_after_week2.html")

